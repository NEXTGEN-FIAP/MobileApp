‚ú® Tecnologias Utilizadas

SocialRate foi constru√≠do com essas linguagens/frameworks/ferramentas:

# TypeScript: O TypeScript √© um superconjunto tipado de JavaScript que compila para JavaScript simples.
React Native: O React Native √© uma biblioteca JavaScript que permite criar aplicativos nativos para Android, iOS e outros usando o React.
# Expo: Expo √© um ecossistema de ferramentas que o ajudam a desenvolver, criar, atualizar, enviar e monitorizar aplica√ß√µes nativas com React Native no Android, iOS e na Web.
SQLite: O Sqlite √© um motor de base de dados SQL pequeno, r√°pido, aut√≥nomo, de elevada fiabilidade e com todas as funcionalidades. √â o motor de base de dados mais utilizado no mundo e √© um software de c√≥digo aberto. 
AsyncStorage: O AsyncStorage √© um sistema de armazenamento de valores chave n√£o encriptado, ass√≠ncrono e persistente que √© global para a aplica√ß√£o. Deve ser utilizado em vez do LocalStorage. Foi utilizado principalmente para a autentica√ß√£o do app.

# O que iremos adicionar nas pr√≥ximas vers√µes?
# Python: Python √© uma linguagem de programa√ß√£o que permite trabalhar rapidamente e integrar sistemas de forma mais eficaz.
# Java: Java SE √© uma plataforma de software que ajuda a reduzir custos, diminuir o tempo de desenvolvimento, impulsionar a inova√ß√£o e melhorar os servi√ßos de aplica√ß√µes. 
# C#: O C# √© uma linguagem de programa√ß√£o de alto n√≠vel para fins gerais que suporta v√°rios paradigmas. 

Como e para que essas linguagens/frameworks/ferramentas ser√£o utilizadas?

Aplicativo Mobile (React Native, TypeScript) ‚Üí Informa√ß√µes salvas no banco de dados + API para Java:

O aplicativo mobile envia requisi√ß√µes HTTP para uma API Java para realizar opera√ß√µes de processamento e obter respostas.

CSV ‚Üí Modelo de Machine Learning (Python) ‚Üí Modelo Treinado para Java:

Os dados do CSV s√£o processados por um modelo de machine learning em Python.
O modelo treinado √© exportado para um arquivo.
O sistema Java carrega o arquivo do modelo treinado diretamente para utiliz√°-lo em an√°lises ou previs√µes.
Modelo Treinado ‚Üí Java (testa) ‚Üí Banco de Dados (resultado) 
O sistema Java carrega o arquivo do modelo treinado diretamente para utiliz√°-lo em an√°lises ou previs√µes.
O sistema Java processa as solicita√ß√µes e armazena os resultados no banco de dados.
Al√©m disso, fornece uma API adicional para acesso aos resultados para o sistema C#.

Dados no banco ‚Üí C# - feedback personalizado ‚Üí API para Mobile:
O sistema C# fornece feedback personalizado atrav√©s de uma API para Mobile.
Aplicativo Mobile (React Native, TypeScript)
O aplicativo mobile recebe o feedback atrav√©s de requisi√ß√µes HTTP diretas ou por meio de outro mecanismo de comunica√ß√£o.



üìù Solu√ß√£o e para que serve?

# NICHO

O que: Plataforma inteligente que analisa a adequa√ß√£o de influenciadores espec√≠ficos para campanhas de marketing direcionadas, garantindo que a escolha do influenciador esteja alinhada com os objetivos e o p√∫blico-alvo de cada campanha.

Para quem: Empresas que desejam contratar influencers para impulsionar as vendas de seus produtos.

Por que: As empresas buscam entender a percep√ß√£o do p√∫blico em rela√ß√£o aos influencers que est√£o considerando contratar. Isso √© crucial para tomar decis√µes informadas sobre parcerias que possam impactar diretamente as vendas dos produtos. Uma compreens√£o clara da reputa√ß√£o do influencer ajuda a mitigar riscos e garantir que a parceria seja ben√©fica para a marca.

Objetivo: Alavancar as vendas dos produtos por meio de parcerias estrat√©gicas com influencers que tenham uma reputa√ß√£o positiva e uma base de seguidores engajada. A an√°lise de sentimento ajuda a identificar influencers que possam ser mais eficazes na promo√ß√£o dos produtos da empresa, maximizando assim o retorno sobre o investimento em marketing de influ√™ncia.

‚öôÔ∏è Instala√ß√£o e funcionamento a n√≠vel local

# Passo 1:

Descarregue ou clone este reposit√≥rio utilizando a liga√ß√£o abaixo:
git clone https://github.com/Yagotaguchi/socialratefront.git

# Passo 2:
Execute o seguinte comando no diret√≥rio raiz do reposit√≥rio (De um cd frontend) descarregado para instalar as depend√™ncias:
npm install

# Passo 3:
Execute o seguinte comando para executar o servidor de desenvolvimento localmente:
npx start expo

# Passo 4:

Escaneie o QR e abra o aplicativo do Expo ou utilize um emulador para visualizar o aplicativo no seu celular.

#Acesso do diagrama visual da solu√ß√£o

# Link: 
https://miro.com/welcomeonboard/eUY4RkRTUVFYTllvT3c4dTBvSEhaZkxCUU1VT21YU21zMlRYUFo5djdMMmJ6QUxpT2RkTEFDNFBFcUdkd0YySnwzMDc0NDU3MzU2NTg3MjAzMzY5fDI=?share_link_id=310817347936

Observa√ß√µes importantes:

Foi utilizado o aplicativo do Expo para visualizar o aplicativo em um aparelho mobile (Iphone 14)

√â importante salientar que deixamos alguns dados mais expl√≠citos para fins did√°ticos, para que seja mais f√°cil a avalia√ß√£o do nosso projeto.

E entrega solicitou 5 telas do aplicativo, sendo assim, realizamos apenas 6 telas do aplicativo (A proje√ß√£o √© que ele tenha pelo meno 9), sendo elas:
  Tela de Cadastro (Respons√°vel por inserir um usu√°rio no nosso db)
  Tela de Login (Respons√°vel por validar a entrada de um usu√°rio no app)
  Tela Home do Aplicativo 
  Tela de Testes (Respons√°vel por mostrar a veracidade das fun√ß√µes do nosso App)
  Tela de Edi√ß√£o de Cadastro (Respons√°vel por editar o cadastro do usu√°rio)
  Tela Layout (Respons√°vel por facilitar a navega√ß√£o do app)
